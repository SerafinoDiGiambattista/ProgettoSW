
import javax.swing.JFileChooser

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'java-gradle-plugin'
    id 'groovy'
    id 'checkstyle'
    id 'codenarc'
    id 'jacoco'
}
ext {
    checkstyleVersion = '7.2'
    codeNarcVersion= '2.0.0'
}


repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'


}

application {
    // Define the main class for the application.
    mainClass = 'tesi.Process'
}
run{
    standardInput = System.in
}

apply plugin: ControllPlugin
prova {
    estensione {
        file1 = file('config/Controll/config.properties')
    }
}

checkstyle {
    toolVersion = checkstyleVersion
    config = rootProject.resources.text.fromFile('static-tool/checkstyle/rules.xml')
}



//codenarc{
//
//  toolVersion= codeNarcVersion
// config = rootProject.resources.text.fromFile('plugin-stan/codenarc/rules.groovy')

//}


checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}

//codenarcMain{
//  source = 'buildSrc/src/main/groovy'
//}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}
apply plugin : 'jacoco'
jacoco {
    toolVersion = "0.8.6"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

